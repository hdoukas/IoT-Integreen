# by Matthias Dieter Walln√∂fer, TIS innovation park, Bolzano/Bozen - Italy

There are the following service object templates provided:
- serviceObject: .json + .id, intended for use with Arduino board +
  temperature sensor (in our case Arduino Starter Kit with "Love-o-Meter"
  assemblation, special sketch - "temp-starter")
  under "progs/" temp.py for feeding data
- serviceObject2: .json + .id, intended for use with Arduino + Grove
  temperature sensor (in our case Arduino + Grove Starter Kit Plus/v3, special
  sketch - "temp-grove")
  under "progs/" temp.py for feeding data
- serviceObject3: .json + .id, intended for use with Arduino board + LEDs (in
  our case Arduino Starter Kit with "Love-o-Meter" assemblation, special
  sketch - "temp-starter")
  under "acts/" scripts for controlling the actuations
- SOComposed: .json + .id, intended for calculation of sum and mean between
  serviceObject + serviceObject2

Arduino sketches (programs):
- nodered/temp-starter: temperature sketch for Arduino Starter Kit with LED
  actuations
- nodered/temp-grove: temperature sketch for Arduino Grove

Other stuff:
- serviceUpdates: .json, artifical data updates for testing
- timeInterval.json, useful for data queries in time ranges
- flows.json: Node-Red flow for ServIoTicy-InTeGreen integration, needs to be
  copied into the Node-Red directory and renamed to flows-<hostname>.json
- convTimeServ.js: converts UNIX timestamps into cleartext dates, is appended to
  the curl commands: | ./convTimeServ.js
  Works eg. for getting SO data (= updates).
  Attention: when the returned dataset is big, the JSON records get splitted
  up in more transmission chunks in which case the tool may fail. 

# getting all SOs
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/

# create SO, please store ID into id-file!
curl -i -X POST -H "Content-Type: application/json" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" -d @tempServiceObject.json http://localhost:8080/

# getting SO
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject.id`

# getting all streams of SO
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject.id`/streams

# update SO with new data
curl -i -X PUT -H "Content-Type: application/json" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" -d @tempServiceUpdate.json http://localhost:8080/`cat tempServiceObject.id`/streams/temp1
curl -i -X PUT -H "Content-Type: application/json" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" -d @tempServiceUpdate2.json http://localhost:8080/`cat tempServiceObject2.id`/streams/temp1

# getting all SO data
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject.id`/streams/temp1
# important grep
grep -o "{\"channels\":{\"celsius\":{\"current-value\":0.0}},\"lastUpdate\":[[:digit:]]\+}"
# /lastUpdate for latest update
# convert timestamps to plain text with | ./convTimeServ.js

# getting all subscriptions attached to SO
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject.id`/streams/temp1/subscriptions

# clear all SO data
curl -i -X DELETE -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject.id`/streams/temp1

# delete SO (and all associated data!)
curl -i -X DELETE -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject.id`

# finer-grained queries (timestamp interval)
curl -i -X POST -H "Content-Type: application/json" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" -d @timeInterval.json http://localhost:8080/`cat tempServiceObject.id`/streams/temp1/search

# get available actuations
curl -i -H "Content-Type: application/json" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject3.id`/actuations/

# invoke actuation
curl -i -X POST -H "Content-Type: text/plain" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject3.id`/actuations/<act>

# update actuation
curl -i -X PUT -H "Content-Type: application/json" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" -d 'Received on the device' http://localhost:8080/`cat tempServiceObject3.id`/actuations/<act ID>

# get active actuation status
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempServiceObject3.id`/actuations/<act ID>

# create composed SO, please store ID into id-file!
curl -i -X POST -H "Content-Type: application/json" -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" -d @tempSOComposed.json http://localhost:8080/

# getting composed SO
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempSOComposed.id`

# getting all composed SO data
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempSOComposed.id`/streams/sum
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempSOComposed.id`/streams/avg
# private
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/private/`cat tempSOComposed.id`/streams/sum
curl -i -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/private/`cat tempSOComposed.id`/streams/avg
# /lastUpdate for latest update

# delete composed SO
curl -i -X DELETE -H "Authorization: M2JhMmRkMDEtZTAwZi00ODM5LThmYTktOGU4NjNjYmJmMjc5N2UzNzYwNWItNTc2ZS00MGVlLTgyNTMtNTgzMmJhZjA0ZmIy" http://localhost:8080/`cat tempSOComposed.id`
